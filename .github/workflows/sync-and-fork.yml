name: 'Sync and publish'

on:
  schedule:
    - cron:  '0 7 * * 1,4'
    # scheduled at 07:00 every Monday and Thursday

  workflow_dispatch:  # click the button on Github repo!

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo

    steps:
    # REQUIRED step
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
        # optional: set the branch to checkout,
        # sync action checks out your 'target_sync_branch' anyway
        # ref:  my-branch
        # REQUIRED if your upstream repo is private (see wiki)
        persist-credentials: false

    # REQUIRED step
    # Step 2: run the sync action
    - name: Sync upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
      with:
        target_sync_branch: main
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        upstream_sync_branch: main
        upstream_sync_repo: herrbengtsson/ezine-test
        # upstream_repo_access_token: ${{ secrets.UPSTREAM_REPO_SECRET }}

        # Set test_mode true to run tests instead of the true action!!
        #test_mode: true
      
    # Step 3: Display a sample message based on the sync output var 'has_new_commits'
    - name: New commits found
      if: steps.sync.outputs.has_new_commits == 'true'
      run: echo "New commits were found to sync."
    
    - name: No new commits
      if: steps.sync.outputs.has_new_commits == 'false'
      run: echo "There were no new commits."
      
    - name: Show value of 'has_new_commits'
      run: echo ${{ steps.sync.outputs.has_new_commits }}

    - name: Setup Pages
      if: steps.sync.outputs.has_new_commits == 'true'
      uses: actions/configure-pages@v3
    - name: Create output directory
      if: steps.sync.outputs.has_new_commits == 'true'
      run: mkdir output
    - name: Set up Python 3.11
      if: steps.sync.outputs.has_new_commits == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      if: steps.sync.outputs.has_new_commits == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install feedgen
        if [ -f RSSGenerator/requirements.txt ]; then pip install -r RSSGenerator/requirements.txt; fi
    - name: Run RSS Generator
      if: steps.sync.outputs.has_new_commits == 'true'
      run: |
        latest=$(ls -v Ezines/ | tail -n 1)
        echo "Generating: " $latest
        python RSSGenerator/rssgenerator.py "Ezines/$latest" rss > output/latest.rss
        python RSSGenerator/rssgenerator.py "Ezines/$latest" atom > output/latest.atom
    - name: Generate index.htm from readme
      if: steps.sync.outputs.has_new_commits == 'true'
      uses: maxheld83/pandoc@v2
      with:
        args: '--standalone --output=output/index.html --metadata pagetitle="AppSec Ezine" README.md'
    - name: Upload artifact
      if: steps.sync.outputs.has_new_commits == 'true'
      uses: actions/upload-pages-artifact@v2
      with:
        path: 'output'
    - name: Deploy to GitHub Pages
      if: steps.sync.outputs.has_new_commits == 'true'
      id: deployment
      uses: actions/deploy-pages@v2
